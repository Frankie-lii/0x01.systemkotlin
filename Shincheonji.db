import java.sql.Connection
import java.sql.DriverManager
import java.sql.SQLException

class DatabaseManager {
    private val connection: Connection

    init {
        val url = "jdbc:sqlite:shincheonji_kenya_church.db"
        connection = DriverManager.getConnection(url)
        createTable()
    }

    private fun createTable() {
        val createTableSQL = """
            CREATE TABLE IF NOT EXISTS members (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                age INTEGER NOT NULL,
                email TEXT NOT NULL,
                phone TEXT NOT NULL
            );
        """.trimIndent()
        
        connection.createStatement().use { stmt ->
            stmt.execute(createTableSQL)
        }
    }

    fun insertMember(name: String, age: Int, email: String, phone: String) {
        val insertSQL = "INSERT INTO members(name, age, email, phone) VALUES(?, ?, ?, ?)"
        
        connection.prepareStatement(insertSQL).use { pstmt ->
            pstmt.setString(1, name)
            pstmt.setInt(2, age)
            pstmt.setString(3, email)
            pstmt.setString(4, phone)
            pstmt.executeUpdate()
        }
    }

    fun getMembers(): List<Member> {
        val selectSQL = "SELECT * FROM members"
        val members = mutableListOf<Member>()

        connection.createStatement().use { stmt ->
            val resultSet = stmt.executeQuery(selectSQL)
            while (resultSet.next()) {
                val id = resultSet.getInt("id")
                val name = resultSet.getString("name")
                val age = resultSet.getInt("age")
                val email = resultSet.getString("email")
                val phone = resultSet.getString("phone")
                members.add(Member(id, name, age, email, phone))
            }
        }
        return members
    }
}

data class Member(val id: Int, val name: String, val age: Int, val email: String, val phone: String)
